#!/bin/sh

# Array of packages to install.
packages=(
    # Basic packages
    "termite"                           # Terminal emulator
    "neofetch"                          # Display information about system
    "txtw-git"                          # Returns text width in pixels
    "infinality-bundle"                 # Patches to improve font rendering

    # Editing tools
    "vim"                               # Basic terminal text editor
    "atom-editor"                       # Complex text editor
    "intellij-idea-community-edition"   # Java IDE

    # Shell tools
    "zsh"                               # Bash shell replacement
    "zsh-syntax-highlighting"           # Syntax highlighting plugin for zsh

    # Internet
    "chromium"                          # Web browser

    # Window management
    "i3-gaps-git"                       # Window manager
    "lemonbar-xft-git"                  # Panel displayer
    "conky"                             # Panel helper
    "compton"                           # Compositer
    "rofi"                              # Program run menu

    # Image realted
    "feh"                               # Image viewer / wallpaper setter
    "scrot"                             # Screenshot tool
    "imagemagick"                       # Terminal image manipulation

    # Music related
    "spotify"                           # Music streaming service
    "playerctl"                         # Music control tool
    "cava-git"                          # Terminal music visualizer
    "ponymix"                           # Volume control tool
)

homeStows=(
    "bin"
    "cava"
    "compton"
    "i3"
    "neofetch"
    "pacaur"
    "qutebrowser"
    "ranger"
    "termite"
    "wallpaper"
    "x"
)

# Ask for user password only once.
sudo -v

# Install stowed config files.
echo "Installing dotfiles."

for ((i=0; i<=${#homeStows[@]}; i++)); do
    echo "Preparing to install ${homeStows[i]}."
    stow -d ~/dotfiles -t ~ ${homeStows[i]}
done

# Increase the size of the /tmp directory to be able build the large array of packages.
sudo mount -o remount,size=4G,noatime /tmp

# Fetch keys needed to verify cower and infinality.
echo "Fetching package keys."

    # Cower key.
    gpg --keyserver hkp://pool.sks-keyservers.net --recv-keys 487EACC08557AD082088DABA1EB2638FF56C0C53

    # Infinality key.
    sudo pacman-key -r 962DDE58
    sudo pacman-key -f 962DDE58
    sudo pacman-key --lsign-key 962DDE58

    # Refresh all keys.
    sudo pacman-key --refresh-keys

# Make sure AUR dependencies are installed.
echo "Checking AUR helper dependencies."
sudo pacman -S --needed --noconfirm base-devel git

# Build AUR helper.
echo "Building AUR helper."

buildroot="$(mktemp -d)"

mkdir -p "$buildroot"
cd "$buildroot" || exit 1

git clone "https://aur.archlinux.org/cower.git"
git clone "https://aur.archlinux.org/pacaur.git"

cd "${buildroot}/cower" || exit 1
makepkg --syncdeps --install --noconfirm

cd "${buildroot}/pacaur" || exit 1
makepkg --syncdeps --install --noconfirm

cd "$HOME" || exit 1
rm -rf "$buildroot"

# Install packages from array.
echo "Installing user specified packages."

for ((i=0; i<=${#packages[@]}; i++)); do
    echo "Preparing to install ${packages[i]}."
    pacaur --noedit --noconfirm -S ${packages[i]}
done

# Change user shell.
echo "Changing user shell."
sudo chsh -s /bin/zsh $(whoami)

# Remove any orphanated packages.
echo "Removing orphanated packages."
sudo pacman -Rns $(pacman -Qtdq)
