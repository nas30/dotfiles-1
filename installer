#!/bin/sh

# Array of packages to install.
packages=(
    # Shell Packages
    "zsh"                               # Bash shell replacement.
    "zsh-syntax-highlighting"           # Syntax highlighting plugin for zsh.

    # Basic Packages
    "rxvt-unicode-256xresources"        # Terminal emulator.
    "ranger"                            # File explorer.
    "neofetch"                          # Display information about system.
    "cairo-infinality-ultimate"         # Patches to improve font rendering.
    "fontconfig-infinality-ultimate"    # Patches to improve font rendering.
    "freetype2-infinality-ultimate"     # Patches to improve font rendering.
    "wget"                              # Tool for downloading files from the internet.
    "unzip"                             # Tool for extracting zip archives.
    "unrar"                             # Tool for extracting rar archives.
    "p7zip"                             # Tool for extracting 7z archives.
    "xclip"                             # Allows manipulation of clipboard from terminal.

    # Window Management Packages
    "bspwm"                             # Window manager.
    "sxhkd"                             # Hotkey daemon.
    "lemonbar-xft-git"                  # Panel displayer.
    "txtw-git"                          # Returns text width in pixels.
    "compton"                           # Compositer.
    "rofi"                              # Program run menu.

    # Text Editor Packages
    "atom-editor-beta"                  # Hackable text editor.
    "gvfs"                              # Used by atom to delete files.

    # Programming Packages
    "jdk"                               # Oracle Java development kit.
    "dfu-programmer"                    # Set keys on programmable keyboard.

    # Internet Packages
    "google-chrome-dev"                 # Web browser.
    "dropbox"                           # Cloud storage.
    "dropbox-cli"                       # Terminal interface for dropbox.

    # Imaging Packages
    "feh"                               # Image viewer / wallpaper setter.
    "scrot"                             # Screenshot tool.
    "imagemagick"                       # Terminal image manipulation.

    # Music Packages
    "spotify-beta"                      # Music streaming service.
    "playerctl"                         # Music control tool.
    "cava-git"                          # Terminal music visualizer.
    "ponymix"                           # Volume control tool.

    # Gaming Packages
    "steam"                             # You know, steam.
    "discord-canary"                    # VoIP client.
)

# Array of stows to install.
stows=(
    # Home folder stows.
    "atom--home"
    "bin--home"
    "bspwm--home"
    "cava--home"
    "compton--home"
    "fonts--home"
    "lemonbar--home"
    "misc--home"
    "neofetch--home"
    "pacaur--home"
    "rofi--home"
    "urxvt--home"
    "wallpaper--home"
    "x--home"
    "zsh--home"

    # Root folder stows.
    "pacman--root"
)

# Ask for user password only once.
sudo -v

# Make sure script dependencies are installed.
sudo pacman -S --needed --noconfirm base-devel git stow

# Remove old, conflicting files.
rm -rf ~/bin
rm -rf ~/.atom
rm -rf ~/.config/bspwm
rm -rf ~/.config/cava
rm -rf ~/.config/compton
rm -rf ~/.config/lemonbar
rm -rf ~/.config/neofetch
rm -rf ~/.config/pacaur
rm -rf ~/.config/rofi
rm -rf ~/.config/sxhkd
rm -rf ~/.fonts
rm -rf ~/.universal
rm -rf ~/.wallpaper
rm -rf ~/.xinitrc
rm -rf ~/.xres
rm -rf ~/.Xresources
rm -rf ~/.zlogin
rm -rf ~/.zsh
rm -rf ~/.zshrc

sudo rm -rf /etc/pacman.conf

# Install stowed files from array.
for i in ${stows[@]}; do
    if [[ $(echo ${i} | grep "\--home") != "" ]]; then
        stow -d ~/dotfiles -t ~ ${i}
    elif [[ $(echo ${i} | grep "\--root") != "" ]]; then
        sudo stow -d ~/dotfiles -t / ${i}
    fi

    echo "${i} stow installed."
done

# Increase the size of the /tmp directory to be able build the large array of packages.
sudo mount -o remount,size=4G,noatime /tmp

# Fetch cower key.
gpg --keyserver hkp://pool.sks-keyservers.net --recv-keys 487EACC08557AD082088DABA1EB2638FF56C0C53

# Fetch infinality key.
sudo pacman-key -r 962DDE58
sudo pacman-key -f 962DDE58
sudo pacman-key --lsign-key 962DDE58

# Refresh all keys.
sudo pacman-key --refresh-keys

# Synchronize repositories.
sudo pacman -Sy

# Build manual packages.
if [[ $(pacman -Qs pacaur) == "" ]]; then
    buildRoot="/tmp/buildroot"

    # Prepare build directory.
    mkdir -p "${buildRoot}"
    cd "${buildRoot}" || exit 1

    # Retrieve all source files.
    git clone "https://aur.archlinux.org/cower.git"
    git clone "https://aur.archlinux.org/pacaur.git"
    git clone "git://arcetera.moe/disputils.git"

    # Build cower, a dependency for pacaur.
    cd "${buildRoot}/cower" || exit 1
    makepkg --syncdeps --install --noconfirm

    # Build pacaur, an AUR helper.
    cd "${buildRoot}/pacaur" || exit 1
    makepkg --syncdeps --install --noconfirm

    # Build disputils, a display information utility.
    cd "${buildRoot}/disputils" || exit 1
    make
    sudo make install

    # Clean up build directory.
    cd ~ || exit 1
    rm -rf "${buildRoot}"
fi

# Install packages from array that are not already installed.
for i in ${packages[@]}; do
    if [[ $(pacman -Qs ${i}) == "" ]]; then
        pacaur --noedit -S ${i}
    fi
done

# Change user shell.
sudo chsh -s /bin/zsh $(whoami)

# Remove any orphanated packages.
sudo pacman -Rns $(pacman -Qtdq)
