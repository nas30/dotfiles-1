#!/bin/sh

# Array of packages to install.
packages=(
    # Basic Packages
    "termite"                           # Terminal emulator.
    "ranger"                            # File explorer.
    "neofetch"                          # Display information about system.
    "cairo-infinality-ultimate"         # Patches to improve font rendering.
    "fontconfig-infinality-ultimate"    # Patches to improve font rendering.
    "freetype2-infinality-ultimate"     # Patches to improve font rendering.
    "wget"                              # Tool for downloading files from the internet.
    "unzip"                             # Tool for extracting zip archives.
    "unrar"                             # Tool for extracting rar archives.
    "xclip"                             # Allows manipulation of clipboard from terminal.

    # Text Editor Packages
    "atom-editor-beta"                  # Hackable text editor.
    "gvfs"                              # Used by atom to delete files.

    # Programming Packages
    "jdk"                               # Oracle Java development kit.

    # Shell Packages
    "zsh"                               # Bash shell replacement.
    "zsh-syntax-highlighting"           # Syntax highlighting plugin for zsh.

    # Internet Packages
    "google-chrome-dev"                 # Web browser.
    "emojione-color-font"               # Font to display emoji in firefox.
    "qutebrowser"                       # Small web browser for encapsuling web apps.
    "dropbox"                           # Cloud storage.
    "dropbox-cli"                       # Terminal interface for dropbox.

    # Window Management Packages
    "bspwm"                             # Window manager.
    "sxhkd"                             # Hotkey daemon.
    "lemonbar-xft-git"                  # Panel displayer.
    "txtw-git"                          # Returns text width in pixels.
    "compton"                           # Compositer.
    "rofi"                              # Program run menu.

    # Image Packages
    "feh"                               # Image viewer / wallpaper setter.
    "scrot"                             # Screenshot tool.
    "imagemagick"                       # Terminal image manipulation.

    # Music Packages
    "spotify"                           # Music streaming service.
    "playerctl"                         # Music control tool.
    "cava-git"                          # Terminal music visualizer.
    "ponymix"                           # Volume control tool.
)

# Array of stows to install.
stows=(
    "atom--home"
    "bin--home"
    "cava--home"
    "fonts--home"
    "neofetch--home"
    "pacaur--home"
    "pacman--root"
    "qutebrowser--home"
    "termite--home"
    "wallpaper--home"
    "wm--home"
    "x--home"
    "zsh--home"
)

# Ask for user password only once.
sudo -v

# Make sure script dependencies are installed.
echo "Checking dependencies."
sudo pacman -S --needed --noconfirm base-devel git stow

# Remove old stowed files.
sudo rm -rf /etc/pacman.conf
rm -rf ~/bin
rm -rf ~/.atom
rm -rf ~/.config/bspwm
rm -rf ~/.config/cava
rm -rf ~/.config/compton
rm -rf ~/.config/lemonbar
rm -rf ~/.config/neofetch
rm -rf ~/.config/pacaur
rm -rf ~/.config/qutebrowser
rm -rf ~/.config/sxhkd
rm -rf ~/.config/termite
rm -rf ~/.fonts
rm -rf ~/.universal
rm -rf ~/.wallpaper
rm -rf ~/.xinitrc
rm -rf ~/.Xresources
rm -rf ~/.zlogin
rm -rf ~/.zsh
rm -rf ~/.zshrc

# Install stowed files from array.
echo "Installing dotfiles."

for i in ${stows[@]}; do
    if [[ $(echo ${i} | grep "\--home") != "" ]]; then
        stow -d ~/dotfiles -t ~ ${i}
    else
        sudo stow -d ~/dotfiles -t / ${i}
    fi

    echo "${i} installed."
done

# Increase the size of the /tmp directory to be able build the large array of packages.
sudo mount -o remount,size=4G,noatime /tmp

# Fetch keys needed to verify cower and infinality.
echo "Fetching package keys."

    # Cower key.
    gpg --keyserver hkp://pool.sks-keyservers.net --recv-keys 487EACC08557AD082088DABA1EB2638FF56C0C53

    # Infinality key.
    sudo pacman-key -r 962DDE58
    sudo pacman-key -f 962DDE58
    sudo pacman-key --lsign-key 962DDE58

    # Refresh all keys.
    sudo pacman-key --refresh-keys

    # Synchronize repositories.
    sudo pacman -Sy

# Build AUR helper.
echo "Building AUR helper."

buildroot="$(mktemp -d)"

mkdir -p "$buildroot"
cd "$buildroot" || exit 1

git clone "https://aur.archlinux.org/cower.git"
git clone "https://aur.archlinux.org/pacaur.git"

cd "${buildroot}/cower" || exit 1
makepkg --syncdeps --install --noconfirm

cd "${buildroot}/pacaur" || exit 1
makepkg --syncdeps --install --noconfirm

cd "$HOME" || exit 1
rm -rf "$buildroot"

# Install packages from array.
echo "Installing user specified packages."

for i in ${packages[@]}; do
    # Only install packages not already on system.
    if [[ $(pacaur -Qs ${i}) == "" ]]; then
        pacaur --noedit -S ${i}
        rm -rf ~/.cache
        echo "Package ${i} installed."
    fi
done

# Change user shell.
echo "Changing user shell."
sudo chsh -s /bin/zsh $(whoami)

# Remove any orphanated packages.
echo "Removing orphanated packages."
sudo pacman -Rns $(pacman -Qtdq)
